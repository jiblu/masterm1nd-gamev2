{"version":3,"sources":["Assets/ding.wav","Assets/oops.wav","Assets/wrong.mp3","Assets/yay.wav","Assets/aww.wav","Constants/Colors.js","Constants/Metrics.js","Components/Stack.jsx","Components/Text.jsx","Containers/Rules.jsx","Containers/Leaderboard.jsx","Components/Label.jsx","Components/Input.jsx","Components/Button.jsx","Components/Dropdown.jsx","Containers/Settings.jsx","Actions/Index.js","Components/TextDisplay.jsx","Containers/Guesses.jsx","Helpers/isValidGuess.js","Helpers/createFeedback.js","Helpers/pickRandomHint.js","Components/ProgressBar.jsx","Containers/ResultPage.jsx","Components/Hint.jsx","Containers/Dashboard.jsx","Containers/GameContainer.jsx","Components/PageDiv.jsx","Containers/App.jsx","Reducers/Index.js","index.jsx"],"names":["module","exports","colors","primary","primaryAccent","secondary","secondaryAccent","black","light","gray","lightGray","iceBlue","darkIceBlue","lightGrayBlue","lightSteelBlue","lightBlue","darkGray","white","linkedinblue","metrics","buttonWidth","radiusSmall","fontSize","smallest","smaller","small","medium","large","Stack","styled","div","props","vertical","css","justify","align","margin","Text","size","Metrics","color","Colors","Rules","Leaderboard","LabelStyle","label","Label","text","InputField","input","Input","placeholder","onChange","e","id","value","Button","button","bgcolor","cursor","Select","select","Dropdown","list","map","item","i","key","levels","Settings","state","username","level","handleChange","bind","handleSubmit","this","setState","target","saveSettings","then","startGame","style","onClick","Component","mapDispatchToProps","settings","max","url","dispatch","axios","get","response","secretCode","data","split","slice","join","rangeUpperLimit","type","catch","console","log","connect","TextDisplay","horizontal","GuessesTable","table","GuessesRow","tr","GuessesHeader","th","GuessesData","td","Guesses","guesses","guess","feedback","nums","numPlaces","isValidGuess","length","isNaN","reduce","total","next","createFeedback","correctNums","correctNumsAndPlaces","guessObject","secretCodeObject","feedbackObject","digit","secretDigit","hasOwnProperty","indices","count","index","Math","min","pickRandomHint","floor","random","Tracker","ProgressInTracker","percentage","ProgressBar","Result","ResultPage","useWindowSize","width","height","confetti","gameStatus","result","JSON","stringify","score","guessesLeft","children","exitGame","HintDiv","Hint","show","hint","HelpOutline","MainContainer","SideContainer","MidContainer","Dashboard","currentGuess","showHint0","showHint1","showHint2","showHint3","hintNotification","handleBuyHint","yay","UIfx","yayMp3","winGame","play","wrongMp3","saveGuess","aww","awwMp3","loseGame","oopsMp3","alertMsg","alert","dingMp3","randomHintIndex","updateGuessesScore","setTimeout","buyHintDisabled","resultMessage","disabled","playing","ContentDiv","Content","PageDiv","App","useState","showRules","toggleRules","showLeaderboard","toggleLeaderboard","visible","onClose","initialState","rootReducer","action","newGuessesLeft","newGuesses","newScore","push","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ad63195.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ding.d8e08721.wav\";","module.exports = __webpack_public_path__ + \"static/media/oops.2d69083e.wav\";","module.exports = __webpack_public_path__ + \"static/media/wrong.5acd1a08.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yay.caf29821.wav\";","module.exports = __webpack_public_path__ + \"static/media/aww.8b03bd43.wav\";","const colors = {\n  primary: '#68838B',\n  primaryAccent: '#f8f8ff',\n  secondary: '#303030',\n  secondaryAccent: '#a9a9a9',\n  black: '#000000',\n  light: '#E8E8E8',\n  gray: '#BBB8B7',\n  lightGray: '#F8F8F8',\n  iceBlue: '#F0F8FF',\n  darkIceBlue: '#C6E2FF',\n  lightGrayBlue: '#B7C3D0',\n  lightSteelBlue: '#A2B5CD',\n  lightBlue: '#B7C3D0',\n  darkGray: '#707070',\n  white: '#FFFFFF',\n  linkedinblue: '#0072B1'\n}\n\nexport default colors\n","const metrics = {\n  buttonWidth: 140,\n  radiusSmall: 5,\n  fontSize: {\n    smallest: 10,\n    smaller: 12,\n    small: 14,\n    medium: 16,\n    large: 30\n  }\n}\n\nexport default metrics\n","import styled, { css } from 'styled-components'\n\n// default stack is horizontal\nconst Stack = styled.div`\n  display: flex;\n  ${props => props.vertical && css`\n    flex-direction: column\n  `};\n  ${props => props.justify && css`\n    justify-content: ${props.justify}\n  `};\n  ${props => props.align && css`\n    align-items: ${props.align}\n  `};\n  ${props => props.margin && css`\n    margin: ${props.margin}\n  `}\n`\n\nexport default Stack\n","import styled, { css } from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\n\nconst Text = styled.div`\n  margin: ${props => props.margin ? props.margin : '0px'};\n  ${props => props.align && css`\n    text-align: ${props.align}\n  `};\n  ${props => props.size && css`\n    font-size: ${Metrics.fontSize[props.size]}px\n  `};\n  ${props => props.color && css`\n    color: ${Colors[props.color]}\n  `};\n`\n\nexport default Text\n","import React from 'react'\nimport Stack from '../Components/Stack.jsx'\nimport Text from '../Components/Text.jsx'\n\nconst Rules = props => (\n  <Stack vertical>\n    <Text size='small' color='secondary'>Game Rules</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You get 10 chances to crack the 4 digit code</Text></li>\n        <li><Text size='smaller'>After each guess, you will get two feedback values:</Text></li>\n        <li><Text size='smaller'> 1) Numbers and Places - # of correct digits in the right place </Text></li>\n        <li><Text size='smaller'> 2) Numbers - # of correct digits in the wrong place </Text></li>\n      </ul>\n    </Stack>\n\n    <Text size='small' color='secondary'>Scoring</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You start with 100 points</Text></li>\n        <li><Text size='smaller'>10 points deducted for each round of incorrect guesses</Text></li>\n        <li><Text size='smaller'>You lose if you have 0 points or use up all your guesses - whichever comes first</Text></li>\n        <li><Text size='smaller'>You also have the option to buy hints in exchange for sacrificing 3 guesses / 30 points</Text></li>\n      </ul>\n    </Stack>\n    <Text size='smaller' color='secondary'>*Increase level to increase viable number range</Text>\n    <Text size='smaller' color='secondary'>Normal: 0 - 7 / Nightmare: 0 - 8 / Hell: 0 - 9</Text>\n  </Stack>\n)\n\nexport default Rules\n","import React from 'react'\nimport Stack from '../Components/Stack.jsx'\nimport Text from '../Components/Text.jsx'\n\nconst Leaderboard = props => (\n  <Stack vertical>\n    <Text size='small' color='secondary'>Leaderboard</Text>\n  </Stack>\n)\n\nexport default Leaderboard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\n\nconst LabelStyle = styled.label`\n  color: ${Colors.black};\n  display: inline-block;\n  width: 95px;\n  font-size: ${Metrics.fontSize.small}px\n`\n\nconst Label = props => {\n  return (\n    <LabelStyle>\n      {props.text}\n    </LabelStyle>\n  )\n}\n\nexport default Label\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\nimport Label from './Label.jsx'\n\nconst InputField = styled.input`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.white};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smallest}px;\n  width: 100px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`\n\nconst Input = props => {\n  return (\n    <div>\n      <Label text={props.text} />\n      <InputField\n        placeholder={props.placeholder}\n        onChange={(e) => props.onChange(props.id, e)}\n        value={props.value}\n      />\n    </div>\n  )\n}\n\nexport default Input\n","import styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\n\nconst Button = styled.button`\n  background-color: ${props => props.bgcolor ? props.bgcolor : Colors.linkedinblue};\n  color: ${props => props.color ? props.color : Colors.primaryAccent};\n  border-radius: ${Metrics.radiusSmall}px;\n  font-size: ${Metrics.fontSize.small}px;\n  width: 100px;\n  margin: 5px;\n  padding: 5px;\n  cursor: ${props => props.cursor ? props.cursor : 'pointer'};\n  &:hover {\n    font-size: calc(${Metrics.fontSize.small}px + 0.5px)\n  } \n\n`\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\nimport Label from './Label.jsx'\n\nconst Select = styled.select`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: 114px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n\n`\n\nconst Dropdown = props => {\n  return (\n    <div>\n      <Label text={props.text} />\n      <Select onChange={(e) => props.onChange(props.id, e)}>\n        {props.list.map((item, i) => {\n          return (\n            <option key={i}>{item}</option>\n          )\n        })}\n      </Select>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveSettings, startGame } from '../Actions/Index.js'\nimport Stack from '../Components/Stack.jsx'\nimport Input from '../Components/Input.jsx'\nimport Text from '../Components/Text.jsx'\nimport Button from '../Components/Button.jsx'\nimport Dropdown from '../Components/Dropdown.jsx'\n\nconst levels = ['normal', 'nightmare', 'hell']\n\nclass Settings extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      username: 'guest',\n      level: 'normal'\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange (id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  handleSubmit () {\n    this.props.saveSettings(this.state)\n      .then(() => this.props.startGame())\n  }\n\n  render () {\n    return (\n      <Stack vertical align='center'>\n        <Stack align='center'>\n          <Text size='medium' color='secondary'>Game Settings</Text>\n        </Stack>\n        <div style={{ margin: '10px' }}>\n          <Input\n            text='username'\n            id='username'\n            placeholder='leave blank for guest'\n            onChange={this.handleChange.bind(this)}\n          />\n          <Dropdown\n            text='level'\n            id='level'\n            onChange={this.handleChange.bind(this)}\n            list={levels}\n          />\n        </div>\n        <Button\n          onClick={this.handleSubmit.bind(this)}\n        >\n          New Game\n        </Button>\n      </Stack>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    level: state.level\n  }\n}\n\nconst mapDispatchToProps = { saveSettings, startGame }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import axios from 'axios'\n\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS'\nexport const START_GAME = 'START_GAME'\nexport const SAVE_GUESS = 'SAVE_GUESS'\nexport const WIN_GAME = 'WIN_GAME'\nexport const LOSE_GAME = 'LOSE_GAME'\nexport const EXIT_GAME = 'EDIT_GAME'\nexport const UPDATE_GUESSES_SCORE = 'UPDATE_GUESSES_SCORE'\n\nexport const saveSettings = (settings) => {\n  const max = settings.level === 'normal' ? 7 : settings.level === 'nightmare' ? 8 : 9\n  const url = `https://www.random.org/integers/?num=4&min=0&max=${max}&col=1&base=10&format=plain&rnd=new`\n  return (dispatch) => {\n    return axios.get(`${url}`)\n      .then(response => {\n        const newSettings = {\n          ...settings,\n          secretCode: response.data.split('\\n').slice(0, 4).join(''),\n          rangeUpperLimit: max\n        }\n        return newSettings\n      })\n      .then(settings => {\n        dispatch({ type: SAVE_SETTINGS, settings: settings })\n      })\n      .catch(e => console.log(`error saving settings/getting api: ${e}`))\n  }\n}\n\nexport const startGame = () => ({ type: START_GAME })\n\nexport const saveGuess = (guessObject) => ({ type: SAVE_GUESS, guessObject: guessObject })\n\nexport const winGame = () => ({ type: WIN_GAME })\n\nexport const loseGame = () => ({ type: LOSE_GAME })\n\nexport const exitGame = () => ({ type: EXIT_GAME })\n\nexport const updateGuessesScore = (guessesLeft, score) => ({ type: UPDATE_GUESSES_SCORE, guessesLeft: guessesLeft, score: score })\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\nimport Label from './Label.jsx'\nimport Stack from './Stack.jsx'\n\nconst Text = styled.div`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.darkIceBlue};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: ${Metrics.buttonWidth - 50}px;\n  margin: 5px;\n  padding: 5px;\n`\n\nconst TextDisplay = props => {\n  return (\n    <Stack horizontal align='center'>\n      <Label text={props.text} />\n      <Text>\n        {props.value}\n      </Text>\n    </Stack>\n  )\n}\n\nexport default TextDisplay\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\n\nconst GuessesTable = styled.table`\n  border-collapse: collapse;\n  border-radius: ${Metrics.radiusSmall}px;\n  overflow: hidden;\n`\nconst GuessesRow = styled.tr`\n\n`\n\nconst GuessesHeader = styled.th`\n  padding: 0.9em;\n  background: ${Colors.darkIceBlue};\n  border-bottom: 2px solid ${Colors.white};\n  font-size: 0.25em;\n  width: 60px\n`\nconst GuessesData = styled.td`\n  padding: 0.9em;\n  background: ${Colors.darkIceBlue};\n  border-bottom: 2px solid ${Colors.white};\n  text-align: center\n`\n\nconst Guesses = props => {\n  return (\n    <GuessesTable>\n      <GuessesRow>\n        <GuessesHeader>Your Guess</GuessesHeader>\n        <GuessesHeader>Numbers</GuessesHeader>\n        <GuessesHeader>Numbers AND Places</GuessesHeader>\n      </GuessesRow>\n      {props.guesses.map((guess, i) => {\n        return (\n          <GuessesRow key={i}>\n            <GuessesData>{guess.guess}</GuessesData>\n            <GuessesData>{guess.feedback.nums}</GuessesData>\n            <GuessesData>{guess.feedback.numPlaces}</GuessesData>\n          </GuessesRow>\n        )\n      })}\n    </GuessesTable>\n  )\n}\n\nexport default Guesses\n","const isValidGuess = (guess, rangeUpperLimit) => {\n  // check that values are within range\n  // check that values are numbers\n  // check for correct number of digits\n  if (!guess) return false\n  if (guess.length !== 4 || isNaN(guess)) {\n    return false\n  }\n  return guess.split('').reduce((total, next) => {\n    return !(next > rangeUpperLimit || !total)\n  }, true)\n}\n\nexport default isValidGuess\n","const createFeedback = (guess, secretCode) => {\n  let correctNums = 0\n  let correctNumsAndPlaces = 0\n  const guessObject = {}\n  const secretCodeObject = {}\n  const feedbackObject = {}\n\n  for (let i = 0; i < guess.length; i++) {\n    const digit = guess[i]\n    const secretDigit = secretCode[i]\n    if (!guessObject.hasOwnProperty(digit)) {\n      guessObject[digit] = {\n        indices: { [i]: i },\n        count: 1\n      }\n    } else {\n      guessObject[digit].indices[i] = i\n      guessObject[digit].count++\n    }\n\n    if (!secretCodeObject.hasOwnProperty(secretDigit)) {\n      secretCodeObject[secretDigit] = {\n        indices: { [i]: i },\n        count: 1\n      }\n    } else {\n      secretCodeObject[secretDigit].indices[i] = i\n      secretCodeObject[secretDigit].count++\n    }\n  }\n\n  for (const digit in secretCodeObject) {\n    if (guessObject.hasOwnProperty(digit)) {\n      correctNums += Math.min(secretCodeObject[digit].count, guessObject[digit].count)\n      for (const index in secretCodeObject[digit].indices) {\n        if (guessObject[digit].indices.hasOwnProperty(index)) {\n          correctNumsAndPlaces++\n          correctNums--\n        }\n      }\n    }\n  }\n\n  feedbackObject.nums = correctNums\n  feedbackObject.numPlaces = correctNumsAndPlaces\n\n  return feedbackObject\n}\n\nexport default createFeedback\n","const pickRandomHint = () => Math.floor(Math.random() * 4)\n\nexport default pickRandomHint\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from '../Constants/index.js'\n\nconst Tracker = styled.div`\n  width: 90%;\n  height: 20px;\n  margin: 15px auto;\n  border-radius: 10px;\n  background-color: ${Colors.white};\n`\nconst ProgressInTracker = styled.div`\n  width: ${props => props.percentage}%;\n  background-color: ${Colors.lightSteelBlue};\n  height: 20px;\n  border-radius: 10px;\n`\n\nconst ProgressBar = props => {\n  return (\n    <Tracker>\n      <ProgressInTracker percentage={props.percentage} />\n    </Tracker>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport Text from '../Components/Text.jsx'\nimport TextDisplay from '../Components/TextDisplay.jsx'\nimport Stack from '../Components/Stack.jsx'\nimport Button from '../Components/Button.jsx'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\nconst Result = styled.div`\n`\n\nconst ResultPage = props => {\n  const { width, height } = useWindowSize()\n  const confetti = props.gameStatus === 'win'\n    ? <Confetti width={width} height={height} /> : null\n  return (\n    <Result>\n      <Stack vertical align='center'>\n        <Text size='medium'>\n          {props.result}\n        </Text>\n        {JSON.stringify(props.confetti)}\n        <TextDisplay text='Your Score' value={props.score} />\n        <TextDisplay text='Username' value={props.username} />\n        <TextDisplay text='Guesses Used' value={`${(10 - props.guessesLeft)} / 10`} />\n        <TextDisplay text='Secret Code' value={props.secretCode} />\n        {props.children}\n        <Button onClick={() => props.exitGame()}>Play Again</Button>\n        {confetti}\n      </Stack>\n    </Result>\n  )\n}\n\nexport default ResultPage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from '../Constants/index.js'\nimport { HelpOutline } from '@material-ui/icons'\n\nconst HintDiv = styled.div`\n  background-color: ${Colors.lightSteelBlue};\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n  margin: 5px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center\n`\nconst Hint = props => {\n  return (\n    <HintDiv>\n      {props.show ? props.hint : <HelpOutline style={{ color: Colors.white }} />}\n    </HintDiv>\n  )\n}\n\nexport default Hint\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport UIfx from 'uifx'\nimport dingMp3 from '../Assets/ding.wav'\nimport oopsMp3 from '../Assets/oops.wav'\nimport wrongMp3 from '../Assets/wrong.mp3'\nimport yayMp3 from '../Assets/yay.wav'\nimport awwMp3 from '../Assets/aww.wav'\nimport { Colors, Metrics } from '../Constants/index.js'\nimport Stack from '../Components/Stack.jsx'\nimport Text from '../Components/Text.jsx'\nimport TextDisplay from '../Components/TextDisplay.jsx'\nimport Input from '../Components/Input.jsx'\nimport Button from '../Components/Button.jsx'\nimport Guesses from './Guesses.jsx'\nimport isValidGuess from '../Helpers/isValidGuess.js'\nimport createFeedback from '../Helpers/createFeedback.js'\nimport pickRandomHint from '../Helpers/pickRandomHint.js'\nimport { saveGuess, winGame, loseGame, exitGame, updateGuessesScore } from '../Actions/Index.js'\nimport ProgressBar from '../Components/ProgressBar.jsx'\nimport ResultPage from './ResultPage.jsx'\nimport Hint from '../Components/Hint.jsx'\nimport Axios from 'axios'\n\nconst MainContainer = styled.div`\n  display: flex;\n  @media (max-width: 900px) {\n    display: block;\n  }\n`\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  flex-grow: 1;\n`\n\nconst MidContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 4;\n  border-radius: 5px;\n  background-color: ${Colors.iceBlue};\n  padding: 15px 5px;\n  margin: 10px 0;\n`\n\nclass Dashboard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentGuess: null,\n      showHint0: false,\n      showHint1: false,\n      showHint2: false,\n      showHint3: false,\n      hintNotification: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleBuyHint = this.handleBuyHint.bind(this)\n  }\n\n  componentDidMount () {\n    axios\n      .get('/api/users')\n      .then(response => {\n        console.log(JSON.stringify(response.data))\n      })\n  }\n\n  handleChange (id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  handleSubmit () {\n    const { currentGuess } = this.state\n    const { rangeUpperLimit, secretCode, guessesLeft, score } = this.props\n    if (isValidGuess(currentGuess, rangeUpperLimit)) {\n      const feedback = createFeedback(currentGuess, secretCode)\n      if (feedback.numPlaces === 4) {\n        const yay = new UIfx(yayMp3)\n        this.props.winGame()\n        yay.play()\n      } else {\n        const wrong = new UIfx(wrongMp3)\n        wrong.play()\n        this.props.saveGuess({\n          guess: currentGuess,\n          feedback: feedback\n        })\n        if (guessesLeft <= 1 || score <= 10) {\n          const aww = new UIfx(awwMp3)\n          this.props.loseGame()\n          aww.play()\n        }\n        this.setState({\n          currentGuess: ''\n        })\n      }\n    } else {\n      const oops = new UIfx(oopsMp3)\n      oops.play()\n      const alertMsg = `Must be a valid 4 digit number. Each digit must be between 0 and ${this.props.rangeUpperLimit}.`\n      alert(alertMsg)\n    }\n  }\n\n  handleBuyHint () {\n    const ding = new UIfx(dingMp3)\n    ding.play()\n    const randomHintIndex = pickRandomHint()\n    this.setState({\n      [`showHint${randomHintIndex}`]: true,\n      hintNotification: `Your hint: ${this.props.secretCode[randomHintIndex]} unlocked!`\n    }, () => this.props.updateGuessesScore(this.props.guessesLeft - 3, this.props.score - 30))\n    setTimeout(() => {\n      this.setState({\n        hintNotification: null\n      })\n    }, 1000)\n  }\n\n  render () {\n    const buyHintDisabled = !(this.props.guessesLeft - 3 >= 0)\n    const resultMessage = this.props.gameStatus === 'win' ? 'You Win!' : this.props.gameStatus === 'lose' ? 'You Lose!' : null\n    if (this.props.gameStatus !== null) {\n      return (\n        <ResultPage\n          result={resultMessage}\n          exitGame={this.props.exitGame}\n          secretCode={this.props.secretCode}\n          guessesLeft={this.props.guessesLeft}\n          username={this.props.username}\n          score={this.props.score}\n          gameStatus={this.props.gameStatus}\n        >\n          <Guesses guesses={this.props.guesses} />\n        </ResultPage>\n      )\n    } else {\n      return (\n        <MainContainer>\n          <SideContainer>\n            <Text size='medium' color='secondary' align='center'>\n              Game Stats\n            </Text>\n            <TextDisplay text='Username' value={this.props.username} />\n            <TextDisplay text='Level' value={this.props.level} />\n            <TextDisplay text='Score' value={this.props.score} />\n            <TextDisplay text='Guesses Left' value={this.props.guessesLeft} />\n            {/* <TextDisplay text='Secret Code' value={this.props.secretCode} /> */}\n          </SideContainer>\n          <Stack vertical>\n            <MidContainer>\n              <Text size='smaller' color='linkedinblue' align='center'>\n                (numbers must be between 0 and {this.props.rangeUpperLimit})\n              </Text>\n              <ProgressBar percentage={100 - (this.props.guessesLeft * 10)} />\n              <Input\n                text='Current Guess'\n                id='currentGuess'\n                placeholder='please enter four digit number'\n                onChange={this.handleChange.bind(this)}\n                value={this.state.currentGuess}\n              />\n              <Stack justify='center'>\n                <Button\n                  bgcolor={Colors.white}\n                  color={Colors.linkedinblue}\n                  onClick={this.props.exitGame}\n                >\n                  Give Up\n                </Button>\n                <Button onClick={this.handleSubmit.bind(this)}>Submit Guess</Button>\n              </Stack>\n            </MidContainer>\n            <MidContainer>\n              <Text size='medium' color='secondary' align='center' margin='0 0 5px 0'>\n                Hints\n              </Text>\n              <Text size='smaller' color='linkedinblue' align='center'>\n                (each hint will deduct 3 available guesses)\n              </Text>\n              <Text size='smaller' color='linkedinblue' align='center'>\n                (* caution * may buy hint that was already purchased)\n              </Text>\n              <Stack justify='space-around'>\n                <Hint hint={this.props.secretCode[0]} show={this.state.showHint0} />\n                <Hint hint={this.props.secretCode[1]} show={this.state.showHint1} />\n                <Hint hint={this.props.secretCode[2]} show={this.state.showHint2} />\n                <Hint hint={this.props.secretCode[3]} show={this.state.showHint3} />\n              </Stack>\n              {this.state.hintNotification}\n              <Button\n                bgcolor={buyHintDisabled ? Colors.light : Colors.white}\n                color={Colors.linkedinblue}\n                onClick={this.handleBuyHint.bind(this)}\n                disabled={buyHintDisabled}\n                cursor={buyHintDisabled ? 'default' : 'cursor'}\n              >\n                Buy Hint\n              </Button>\n            </MidContainer>\n          </Stack>\n          <SideContainer>\n            <Text size='medium' color='secondary' align='center'>\n              Your Guesses\n            </Text>\n            <Guesses guesses={this.props.guesses} />\n          </SideContainer>\n        </MainContainer>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    level: state.level,\n    playing: state.playing,\n    score: state.score,\n    guessesLeft: state.guessesLeft,\n    secretCode: state.secretCode,\n    rangeUpperLimit: state.rangeUpperLimit,\n    guesses: state.guesses,\n    gameStatus: state.gameStatus\n  }\n}\n\nconst mapDispatchToProps = { saveGuess, winGame, loseGame, exitGame, updateGuessesScore }\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Constants/index.js'\nimport Settings from './Settings.jsx'\nimport Dashboard from './Dashboard.jsx'\n\nconst ContentDiv = styled.div`\n  margin: 15px;\n  padding: 15px;\n  border: 1px ${Colors.light} solid;\n  border-radius: ${Metrics.radiusSmall}px;\n`\n\nconst GameContainer = props => {\n  const Content = props.playing === false ? <Settings /> : <Dashboard />\n  return (\n    <ContentDiv>\n      {Content}\n    </ContentDiv>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    playing: state.playing\n  }\n}\n\nexport default connect(mapStateToProps)(GameContainer)\n","import styled from 'styled-components'\n\nconst PageDiv = styled.div`\n  margin: 10px auto;\n  max-width: 900px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default PageDiv\n","import React, { useState } from 'react'\nimport { Colors } from '../Constants/index.js'\nimport Rodal from 'rodal'\nimport 'rodal/lib/rodal.css'\nimport Rules from './Rules.jsx'\nimport Leaderboard from './Leaderboard.jsx'\nimport GameContainer from './GameContainer.jsx'\nimport PageDiv from '../Components/PageDiv.jsx'\nimport Text from '../Components/Text.jsx'\nimport Stack from '../Components/Stack.jsx'\nimport Button from '../Components/Button.jsx'\n\nconst App = props => {\n  const [showRules, toggleRules] = useState(false)\n  const [showLeaderboard, toggleLeaderboard] = useState(false)\n  const RulesModal = props => (\n    <Rodal\n      height={300}\n      visible={showRules}\n      onClose={() => toggleRules(!showRules)}\n    >\n      <Rules />\n    </Rodal>\n  )\n  const LeaderboardModal = props => (\n    <Rodal\n      height={300}\n      visible={showLeaderboard}\n      onClose={() => toggleLeaderboard(!showLeaderboard)}\n    >\n      <Leaderboard />\n    </Rodal>\n  )\n\n  return (\n    <PageDiv>\n      <Text align='center' size='large' color='linkedinblue'>Mastermind v.2</Text>\n      <Stack justify='center'>\n        <Button color={Colors.darkGray} bgcolor={Colors.lightBlue} id='rules' onClick={() => toggleRules(!showRules)}>How To Play</Button>\n        <Button color={Colors.darkGray} bgcolor={Colors.lightBlue} id='leaderboard' onClick={() => toggleLeaderboard(!showLeaderboard)}>Leaderboard</Button>\n      </Stack>\n      <GameContainer />\n      <RulesModal />\n      <LeaderboardModal />\n    </PageDiv>\n  )\n}\n\nexport default App\n","import {\n  SAVE_SETTINGS,\n  START_GAME,\n  SAVE_GUESS,\n  WIN_GAME,\n  LOSE_GAME,\n  EXIT_GAME,\n  UPDATE_GUESSES_SCORE\n} from '../Actions/Index'\n\nconst initialState = {\n  username: 'guest',\n  level: 'normal',\n  playing: false,\n  score: 100,\n  guessesLeft: 10,\n  secretCode: null,\n  rangeUpperLimit: 7,\n  guesses: [],\n  gameStatus: null,\n  confetti: false\n}\n\nconst rootReducer = (state = initialState, action) => {\n  const newGuessesLeft = state.guessesLeft - 1\n  const newGuesses = state.guesses.slice(0)\n  const newScore = state.score - 10\n\n  switch (action.type) {\n    case SAVE_SETTINGS:\n      return {\n        ...state,\n        username: action.settings.username,\n        level: action.settings.level,\n        rangeUpperLimit: action.settings.rangeUpperLimit,\n        secretCode: action.settings.secretCode\n      }\n    case START_GAME:\n      return {\n        ...state,\n        playing: true\n      }\n    case SAVE_GUESS:\n      newGuesses.push(action.guessObject)\n      return {\n        ...state,\n        guesses: newGuesses,\n        guessesLeft: newGuessesLeft,\n        score: newScore\n      }\n    case WIN_GAME:\n      return {\n        ...state,\n        gameStatus: 'win',\n        confetti: true\n      }\n    case LOSE_GAME:\n      return {\n        ...state,\n        gameStatus: 'lose'\n      }\n    case EXIT_GAME:\n      return {\n        ...initialState\n      }\n    case UPDATE_GUESSES_SCORE:\n      return {\n        ...state,\n        guessesLeft: action.guessesLeft,\n        score: action.score\n      }\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport './index.css'\n\nimport App from './Containers/App.jsx'\nimport reducer from './Reducers/Index.js'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}
{"version":3,"sources":["Themes/Colors.js","Themes/Metrics.js","Components/Stack.js","Components/Text.js","Containers/Rules.js","Containers/Leaderboard.js","Components/Label.js","Components/Input.js","Components/Button.js","Components/Dropdown.js","Containers/Settings.js","Actions/Index.js","Components/TextDisplay.js","Containers/Guesses.js","Helpers/isValidGuess.js","Helpers/createFeedback.js","Components/ProgressBar.js","Containers/ResultPage.js","Containers/Dashboard.js","Containers/GameContainer.js","Components/PageDiv.js","App.js","Reducers/Index.js","serviceWorker.js","index.js"],"names":["colors","primary","primaryAccent","secondary","secondaryAccent","black","light","lightGray","darkGray","white","green","yellow","orange","red","metrics","buttonWidth","radiusSmall","fontSize","smaller","small","medium","large","Stack","styled","div","props","vertical","css","justify","align","Text","margin","size","Metrics","color","Colors","Rules","Leaderboard","LabelStyle","label","Label","text","InputField","input","Input","placeholder","onChange","e","id","value","Button","button","bgcolor","Select","select","Dropdown","list","map","item","i","key","levels","Settings","state","username","level","this","setState","target","saveSettings","then","startGame","style","handleChange","bind","onClick","handleSubmit","Component","mapDispatchToProps","settings","max","url","dispatch","axios","get","response","secretCode","data","split","slice","join","rangeUpperLimit","type","catch","console","log","connect","TextDisplay","horizontal","GuessesTable","table","GuessesRow","tr","GuessesHeader","th","GuessesData","td","Guesses","guesses","guess","feedback","nums","numPlaces","isValidGuess","length","isNaN","reduce","total","next","createFeedback","correctNums","correctNumsAndPlaces","guessObject","secretCodeObject","feedbackObject","digit","secretDigit","hasOwnProperty","indices","count","index","Math","min","Tracker","ProgressInTracker","percentage","ProgressBar","Result","ResultPage","useWindowSize","width","height","confetti","gameStatus","result","JSON","stringify","score","guessesLeft","children","exitGame","MainContainer","SideContainer","MidContainer","Dashboard","currentGuess","saveGuess","winGame","loseGame","alertMsg","alert","playing","ContentDiv","Content","PageDiv","App","useState","showRules","toggleRules","showLeaderboard","toggleLeaderboard","visible","onClose","initialState","rootReducer","action","newGuessesLeft","newGuesses","newScore","push","Boolean","window","location","hostname","match","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35b1b15e.chunk.js","sourcesContent":["const colors = {\n  primary: '#0288D1',\n  primaryAccent: '#f8f8ff',\n  secondary: '#303030',\n  secondaryAccent: '#a9a9a9',\n  black: '#000000',\n  light: '#E8E8E8',\n  lightGray: '#F8F8F8',\n  darkGray: '#707070',\n  white: '#FFFFFF',\n  green: '#B2ECA7',\n  yellow: '#FDFDA4',\n  orange: '#FDD3A4',\n  red: '#FDB0A4'\n}\n\nexport default colors\n","const metrics = {\n  buttonWidth: 140,\n  radiusSmall: 5,\n  fontSize: {\n    smaller: 10,\n    small: 14,\n    medium: 18,\n    large: 30\n  }\n}\n\nexport default metrics\n","import styled, { css } from 'styled-components'\n\n// default stack is horizontal\nconst Stack = styled.div`\n  display: flex;\n  ${props => props.vertical && css`\n    flex-direction: column\n  `};\n  ${props => props.justify && css`\n    justify-content: ${props.justify}\n  `};\n  ${props => props.align && css`\n    align-items: ${props.align}\n  `}\n`\n\nexport default Stack\n","import styled, { css } from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst Text = styled.div`\n  margin: ${props => props.margin ? props.margin : '0px'};\n  ${props => props.align && css`\n    text-align: ${props.align}\n  `};\n  ${props => props.size && css`\n    font-size: ${Metrics.fontSize[props.size]}px\n  `};\n  ${props => props.color && css`\n    color: ${Colors[props.color]}\n  `};\n`\n\nexport default Text\n","import React from 'react'\nimport Stack from '../Components/Stack'\nimport Text from '../Components/Text'\n\nconst Rules = props => (\n  <Stack vertical>\n    <Text size='small' color='secondary'>Game Rules</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You get 10 chances to crack the 4 digit code</Text></li>\n        <li><Text size='smaller'>After each guess, you will get two feedback values:</Text></li>\n        <li><Text size='smaller'> 1) Numbers and Places - # of correct digits in the right place </Text></li>\n        <li><Text size='smaller'> 2) Numbers - # of correct digits in the wrong place </Text></li>\n      </ul>\n    </Stack>\n\n    <Text size='small' color='secondary'>Scoring</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You start with 100 points</Text></li>\n        <li><Text size='smaller'>10 points deducted for each round of incorrect guesses</Text></li>\n        <li><Text size='smaller'>Hints cost 10 points for first digit revealed</Text></li>\n        <li><Text size='smaller'>You lose if you have 0 points or use up all your guesses - whichever comes first</Text></li>\n      </ul>\n    </Stack>\n    <Text size='smaller' color='secondary'>*Increase level to increase viable number range</Text>\n    <Text size='smaller' color='secondary'>Normal: 0 - 7 / Nightmare: 0 - 8 / Hell: 0 - 9</Text>\n  </Stack>\n)\n\nexport default Rules\n","import React from 'react'\nimport Stack from '../Components/Stack'\nimport Text from '../Components/Text'\n\nconst Leaderboard = props => (\n  <Stack vertical>\n    <Text size='small' color='secondary'>Leaderboard</Text>\n  </Stack>\n)\n\nexport default Leaderboard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from '../Themes/index'\n\nconst LabelStyle = styled.label`\n  color: ${Colors.black};\n  display: inline-block;\n  width: 100px;\n`\n\nconst Label = props => {\n  return (\n    <LabelStyle>\n      {props.text}\n    </LabelStyle>\n  )\n}\n\nexport default Label\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\n\nconst InputField = styled.input`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.white};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: ${Metrics.buttonWidth}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`\n\nconst Input = props => {\n  return (\n    <div>\n      <Label text={props.text} />\n      <InputField\n        placeholder={props.placeholder}\n        onChange={(e) => props.onChange(props.id, e)}\n        value={props.value}\n      />\n    </div>\n  )\n}\n\nexport default Input\n","import styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst Button = styled.button`\n  background-color: ${props => props.bgcolor ? props.bgcolor : Colors.primary};\n  color: ${props => props.color ? props.color : Colors.primaryAccent};\n  border-radius: ${Metrics.radiusSmall}px;\n  font-size: ${Metrics.fontSize.medium}px;\n  width: ${Metrics.buttonWidth}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n  &:hover {\n    font-size: calc(${Metrics.fontSize.medium}px + 2px)\n  } \n\n`\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\n\nconst Select = styled.select`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: ${Metrics.buttonWidth + 14}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n\n`\n\nconst Dropdown = props => {\n  return (\n    <div>\n      <Label text={props.text} />\n      <Select onChange={(e) => props.onChange(props.id, e)}>\n        {props.list.map((item, i) => {\n          return (\n            <option key={i}>{item}</option>\n          )\n        })}\n      </Select>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveSettings, startGame } from '../Actions/Index'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Stack from '../Components/Stack'\nimport Input from '../Components/Input'\nimport Text from '../Components/Text'\nimport Button from '../Components/Button'\nimport Dropdown from '../Components/Dropdown'\nimport { thisExpression } from '@babel/types'\n\nconst levels = ['normal', 'nightmare', 'hell']\n\nclass Settings extends Component {\n  state = {\n    username: 'guest',\n    level: 'normal'\n  }\n\n  handleChange (id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  handleSubmit () {\n    this.props.saveSettings(this.state)\n      .then(() => this.props.startGame())\n  }\n\n  render () {\n    return (\n      <Stack vertical align='center'>\n        <Stack align='center'>\n          <Text size='medium' color='secondary'>Game Settings</Text>\n        </Stack>\n        <div style={{margin: '10px 20px'}}>\n          <Input\n            text='username'\n            id='username'\n            placeholder='leave blank for guest'\n            onChange={ this.handleChange.bind(this) }\n            />\n          <Dropdown\n            text='level'\n            id='level'\n            onChange={ this.handleChange.bind(this) }\n            list={levels}\n            />\n        </div>\n        <Button\n          onClick={ this.handleSubmit.bind(this) }\n        >\n          New Game\n        </Button>\n      </Stack>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    level: state.level\n  }\n}\n\nconst mapDispatchToProps = { saveSettings, startGame }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)","import axios from 'axios'\n\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS'\nexport const START_GAME = 'START_GAME'\nexport const SAVE_GUESS = 'SAVE_GUESS'\nexport const WIN_GAME = 'WIN_GAME'\nexport const LOSE_GAME = 'LOSE_GAME'\nexport const EXIT_GAME = 'EDIT_GAME'\n\nexport const saveSettings = (settings) => {\n  const max = settings.level === 'normal' ? 7 : settings.level === 'nightmare' ? 8 : 9\n  const url = `https://www.random.org/integers/?num=4&min=0&max=${max}&col=1&base=10&format=plain&rnd=new`\n  return (dispatch) => {\n    return axios.get(`${url}`)\n      .then(response => {\n        const newSettings = {\n          ...settings,\n          secretCode: response.data.split('\\n').slice(0, 4).join(''),\n          rangeUpperLimit: max\n        }\n        return newSettings\n      })\n      .then(settings => {\n        dispatch({ type: SAVE_SETTINGS, settings: settings })\n      })\n      .catch(e => console.log(`error saving settings/getting api: ${e}`))\n  }\n}\n\nexport const startGame = () => ({ type: START_GAME })\n\nexport const saveGuess = (guessObject) => ({ type: SAVE_GUESS, guessObject: guessObject })\n\nexport const winGame = () => ({ type: WIN_GAME })\n\nexport const loseGame = () => ({ type: LOSE_GAME })\n\nexport const exitGame = () => ({ type: EXIT_GAME })\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\nimport Stack from './Stack'\n\nconst Text = styled.div`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.small}px;\n  width: ${Metrics.buttonWidth - 50}px;\n  margin: 5px;\n  padding: 5px;\n`\n\nconst TextDisplay = props => {\n  return (\n    <Stack horizontal align='center'>\n      <Label text={props.text} />\n      <Text>\n        {props.value}\n      </Text>\n    </Stack>\n  )\n}\n\nexport default TextDisplay\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst GuessesTable = styled.table`\n  border-collapse: collapse;\n  border-radius: ${Metrics.radiusSmall}px;\n  overflow: hidden;\n`\nconst GuessesRow = styled.tr`\n\n`\n\nconst GuessesHeader = styled.th`\n  padding: 0.9em;\n  background: ${Colors.light};\n  border-bottom: 2px solid ${Colors.white};\n  font-size: 0.25em;\n  width: 60px\n`\nconst GuessesData = styled.td`\n  padding: 0.9em;\n  background: ${Colors.light};\n  border-bottom: 2px solid ${Colors.white};\n  text-align: center\n`\n\nconst Guesses = props => {\n  return (\n    <GuessesTable>\n      <GuessesRow>\n        <GuessesHeader>Your Guess</GuessesHeader>\n        <GuessesHeader>Numbers</GuessesHeader>\n        <GuessesHeader>Numbers AND Places</GuessesHeader>\n      </GuessesRow>\n      {props.guesses.map((guess, i) => {\n        return (\n          <GuessesRow key={i}>\n            <GuessesData>{guess.guess}</GuessesData>\n            <GuessesData>{guess.feedback.nums}</GuessesData>\n            <GuessesData>{guess.feedback.numPlaces}</GuessesData>\n          </GuessesRow>\n        )\n      })}\n    </GuessesTable>\n  )\n}\n\nexport default Guesses\n","const isValidGuess = (guess, rangeUpperLimit) => {\n  // check that values are within range\n  // check that values are numbers\n  // check for correct number of digits\n  if (!guess) return false\n  if (guess.length !== 4 || isNaN(guess)) {\n    return false\n  }\n  return guess.split('').reduce((total, next) => {\n    return !(next > rangeUpperLimit || !total)\n  }, true)\n}\n\nexport default isValidGuess\n","const createFeedback = (guess, secretCode) => {\n  let correctNums = 0\n  let correctNumsAndPlaces = 0\n  const guessObject = {}\n  const secretCodeObject = {}\n  const feedbackObject = {}\n\n  for (let i = 0; i < guess.length; i++) {\n    const digit = guess[i]\n    const secretDigit = secretCode[i]\n    if (!guessObject.hasOwnProperty(digit)) {\n      guessObject[digit] = {\n        indices: { [i]: i },\n        count: 1\n      }\n    } else {\n      guessObject[digit].indices[i] = i\n      guessObject[digit].count++\n    }\n\n    if (!secretCodeObject.hasOwnProperty(secretDigit)) {\n      secretCodeObject[secretDigit] = {\n        indices: { [i]: i },\n        count: 1\n      }\n    } else {\n      secretCodeObject[secretDigit].indices[i] = i\n      secretCodeObject[secretDigit].count++\n    }\n  }\n\n  for (const digit in secretCodeObject) {\n    if (guessObject.hasOwnProperty(digit)) {\n      correctNums += Math.min(secretCodeObject[digit].count, guessObject[digit].count)\n      for (const index in secretCodeObject[digit].indices) {\n        if (guessObject[digit].indices.hasOwnProperty(index)) {\n          correctNumsAndPlaces++\n          correctNums--\n        }\n      }\n    }\n  }\n\n  feedbackObject.nums = correctNums\n  feedbackObject.numPlaces = correctNumsAndPlaces\n\n  return feedbackObject\n}\n\nexport default createFeedback\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from '../Themes/index'\n\nconst Tracker = styled.div`\n  width: 90%;\n  height: 20px;\n  margin: 15px auto;\n  border-radius: 10px;\n  background-color: ${Colors.light};\n`\nconst ProgressInTracker = styled.div`\n  width: ${props => props.percentage}%;\n  background-color: ${Colors.green};\n  height: 20px;\n  border-radius: 10px;\n`\n\nconst ProgressBar = props => {\n  return (\n    <Tracker>\n      <ProgressInTracker percentage={props.percentage} />\n    </Tracker>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport Text from '../Components/Text'\nimport TextDisplay from '../Components/TextDisplay'\nimport Stack from '../Components/Stack'\nimport Button from '../Components/Button'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\nconst Result = styled.div`\n`\n\nconst ResultPage = props => {\n  const { width, height } = useWindowSize()\n  const confetti = props.gameStatus === 'win' ?\n    <Confetti width={width} height={height} /> : null\n  return (\n    <Result>\n      <Stack vertical align='center'>\n        <Text size='medium'>\n          {props.result}\n        </Text>\n        {JSON.stringify(props.confetti)}\n        <TextDisplay text='Your Score' value={props.score} />\n        <TextDisplay text='Username' value={props.username} />\n        <TextDisplay text='Guesses Used' value={`${(10 - props.guessesLeft)} / 10`} />\n        <TextDisplay text='Secret Code' value={props.secretCode} />\n        {props.children}\n        <Button onClick={() => props.exitGame()}>Play Again</Button>\n        {confetti}\n      </Stack>\n    </Result>\n  )\n}\n\nexport default ResultPage\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Stack from '../Components/Stack'\nimport Text from '../Components/Text'\nimport TextDisplay from '../Components/TextDisplay'\nimport Input from '../Components/Input'\nimport Button from '../Components/Button'\nimport Guesses from './Guesses'\nimport isValidGuess from '../Helpers/isValidGuess'\nimport createFeedback from '../Helpers/createFeedback'\nimport { saveGuess, winGame, loseGame, exitGame } from '../Actions/Index'\nimport ProgressBar from '../Components/ProgressBar'\nimport ResultPage from './ResultPage'\n\nconst MainContainer = styled.div`\n  display: flex;\n  @media (max-width: 900px) {\n    display: block;\n  }\n`\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  flex-grow: 1;\n`\n\nconst MidContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 4;\n  border-radius: 5px;\n  background-color: ${Colors.lightGray};\n  padding: 15px 0;\n  margin: 15px 0;\n`\n\nclass Dashboard extends Component {\n\n  state = {\n    currentGuess: null\n  }\n\n  handleChange (id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  handleSubmit () {\n    let { currentGuess } = this.state\n    let { rangeUpperLimit, secretCode, guessesLeft, score } = this.props\n    if (isValidGuess(currentGuess, rangeUpperLimit)) {\n      let feedback = createFeedback(currentGuess, secretCode)\n      this.props.saveGuess({\n        guess: currentGuess,\n        feedback: feedback\n      })\n      if (feedback.numPlaces === 4) {\n        this.props.winGame()\n      }\n      if (guessesLeft <= 1 || score <= 10) {\n        this.props.loseGame()\n      }\n      this.setState({\n        currentGuess: ''\n      })\n    } else {\n      let alertMsg = `Must be a valid 4 digit number. Each digit must be betweem 0 and ${this.props.rangeUpperLimit}.`\n      alert(alertMsg)\n    }\n  }\n\n  render () {\n    switch (this.props.gameStatus) {\n      case 'win':\n        return (\n          <ResultPage\n            result='You Win!'\n            exitGame={this.props.exitGame}\n            secretCode={this.props.secretCode}\n            guessesLeft={this.props.guessesLeft}\n            username={this.props.username}\n            score={this.props.score}\n            gameStatus={this.props.gameStatus}\n          >\n            <Guesses guesses={this.props.guesses} />\n          </ResultPage>\n        )\n      case 'lose':\n        return (\n          <ResultPage\n            result='You Lose!'\n            exitGame={this.props.exitGame}\n            secretCode={this.props.secretCode}\n            guessesLeft={this.props.guessesLeft}\n            username={this.props.username}\n            score={this.props.score}\n            gameStatus={this.props.gameStatus}\n          >\n            <Guesses guesses={this.props.guesses} />\n          </ResultPage>\n        )\n      default: \n        return (\n          <MainContainer>\n            <SideContainer>\n              <Text\n                size='medium'\n                color='secondary'\n                align='center'\n              >\n                Game Stats\n              </Text>\n              <TextDisplay text='Username' value={this.props.username} />\n              <TextDisplay text='Level' value={this.props.level} />\n              <TextDisplay text='Score' value={this.props.score} />\n              <TextDisplay text='Guesses Left' value={this.props.guessesLeft} />\n              <TextDisplay text='Secret Code' value={this.props.secretCode} />\n            </SideContainer>\n            <MidContainer>\n              <ProgressBar percentage={100 - (this.props.guessesLeft * 10)} />\n              <Input\n                text='Current Guess'\n                id='currentGuess'\n                placeholder='please enter four digit number'\n                onChange={this.handleChange.bind(this)}\n                value={this.state.currentGuess}\n              />\n              <Stack justify='center'>\n                <Button\n                  bgcolor={Colors.white}\n                  color={Colors.primary}\n                  onClick={this.props.exitGame}\n                >\n                  Give Up\n                </Button>\n                <Button onClick={this.handleSubmit.bind(this)}>Submit Guess</Button>\n              </Stack>\n            </MidContainer>\n            <SideContainer>\n              <Text\n                size='medium'\n                color='secondary'\n                align='center'\n              >\n                Your Guesses\n              </Text>\n              <Guesses guesses={this.props.guesses}/>\n            </SideContainer>\n          </MainContainer>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    level: state.level,\n    playing: state.playing,\n    score: state.score,\n    guessesLeft: state.guessesLeft,\n    secretCode: state.secretCode,\n    rangeUpperLimit: state.rangeUpperLimit,\n    guesses: state.guesses,\n    gameStatus: state.gameStatus,\n  }\n}\n\nconst mapDispatchToProps = { saveGuess, winGame, loseGame, exitGame }\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Settings from './Settings'\nimport Dashboard from './Dashboard'\n\nconst ContentDiv = styled.div`\n  margin: 15px;\n  padding: 15px;\n  border: 1px ${Colors.light} solid;\n  border-radius: ${Metrics.radiusSmall}px;\n`\n\nconst GameContainer = props => {\n  const Content = props.playing === false ? <Settings /> : <Dashboard />\n  return (\n    <ContentDiv>\n      {Content}\n    </ContentDiv>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    playing: state.playing\n  }\n}\n\nexport default connect(mapStateToProps)(GameContainer)\n","import styled from 'styled-components'\n\nconst PageDiv = styled.div`\n  margin: 10px auto;\n  max-width: 900px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default PageDiv\n","import React, { useState } from 'react'\nimport { Colors } from './Themes/index'\nimport Rodal from 'rodal'\nimport 'rodal/lib/rodal.css'\nimport Rules from './Containers/Rules'\nimport Leaderboard from './Containers/Leaderboard'\nimport GameContainer from './Containers/GameContainer'\nimport PageDiv from './Components/PageDiv'\nimport Text from './Components/Text'\nimport Stack from './Components/Stack'\nimport Button from './Components/Button'\n\nconst App = props => {\n  const [showRules, toggleRules] = useState(false)\n  const [showLeaderboard, toggleLeaderboard] = useState(false)\n  const RulesModal = props => (\n    <Rodal\n      height={300}\n      visible={showRules}\n      onClose={() => toggleRules(!showRules)}\n    >\n      <Rules />\n    </Rodal>\n  )\n  const LeaderboardModal = props => (\n    <Rodal\n      height={300}\n      visible={showLeaderboard}\n      onClose={() => toggleLeaderboard(!showLeaderboard)}\n    >\n      <Leaderboard />\n    </Rodal>\n  )\n\n  return (\n    <PageDiv>\n      <Text align='center' size='large'>Mastermind v.2</Text>\n      <Stack justify='center'>\n        <Button color={Colors.darkGray} bgcolor={Colors.light} id='rules' onClick={() => toggleRules(!showRules)}>How To Play</Button>\n        <Button color={Colors.darkGray} bgcolor={Colors.light} id='leaderboard' onClick={() => toggleLeaderboard(!showLeaderboard)}>Leaderboard</Button>\n      </Stack>\n      <GameContainer />\n      <RulesModal />\n      <LeaderboardModal />\n    </PageDiv>\n  )\n}\n\nexport default App\n","import {\n  SAVE_SETTINGS,\n  START_GAME,\n  SAVE_GUESS,\n  WIN_GAME,\n  LOSE_GAME,\n  EXIT_GAME\n} from '../Actions/Index'\n\nconst initialState = {\n  username: 'guest',\n  level: 'normal',\n  playing: false,\n  score: 100,\n  guessesLeft: 10,\n  secretCode: null,\n  rangeUpperLimit: 7,\n  guesses: [],\n  gameStatus: null,\n  confetti: false\n}\n\nconst rootReducer = (state = initialState, action) => {\n  const newGuessesLeft = state.guessesLeft - 1\n  const newGuesses = state.guesses.slice(0)\n  const newScore = state.score - 10\n\n  switch (action.type) {\n    case SAVE_SETTINGS:\n      return {\n        ...state,\n        username: action.settings.username,\n        level: action.settings.level,\n        rangeUpperLimit: action.settings.rangeUpperLimit,\n        secretCode: action.settings.secretCode\n      }\n    case START_GAME:\n      return {\n        ...state,\n        playing: true\n      }\n    case SAVE_GUESS:\n      newGuesses.push(action.guessObject)\n      return {\n        ...state,\n        guesses: newGuesses,\n        guessesLeft: newGuessesLeft,\n        score: newScore\n      }\n    case WIN_GAME:\n      return {\n        ...state,\n        gameStatus: 'win',\n        confetti: true\n      }\n    case LOSE_GAME:\n      return {\n        ...state,\n        gameStatus: 'lose'\n      }\n    case EXIT_GAME:\n      return {\n        ...initialState\n      }\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css'\nimport App from './App'\nimport reducer from './Reducers/Index'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}